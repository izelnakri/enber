VERDICT: All I need from ember-source is dist, probably.

first es build is

packagesES + dependenciesES + templateCompilerDependenciesES.
dependenciesES is:
  backburnerES(),
  rsvpES(),
  dagES(),
  routerES(),
  routeRecognizerES(),

  ...glimmerDependenciesES(),

then toAMD()

then add const DEBUG=true to @glimmer/env.js

then loader.js + amdEDAssets + node-module/lib/node-module.js + @glimmer/env.js > ember-all.debug.js

then babel/to-es5

packages = then es5 tree gets changed with these excluded and rolled up:
rollupPackage(packagesES, 'container'),
rollupPackage(packagesES, 'ember-environment'),
rollupPackage(packagesES, 'ember-browser-environment'),
rollupPackage(packagesES, 'ember-glimmer'),
rollupPackage(packagesES, 'ember-metal'),
rollupPackage(packagesES, 'ember-utils'),

then runs es5 on them packages

then testBundle runs: ember-tests.js (includes internal test helpers + packages)

then debug bundle runs: 'ember.debug.js' (has bootstrapModule('ember'))

then emberTestingBundle = concatBundle(emberTestingBundle, {
  outputFile: 'ember-testing.js', // !!
  hasBootstrap: false,
  footer: stripIndent`
    var testing = requireModule('ember-testing');
    Ember.Test = testing.Test;
    Ember.Test.Adapter = testing.Adapter;
    Ember.Test.QUnitAdapter = testing.QUnitAdapter;
    Ember.setupForTesting = testing.setupForTesting;
  `,
});

=============================
if env production: 'ember.prod.js'

+ COMPLEX bundling of 'ember-template-compiler.js'

================================
