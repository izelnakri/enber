- listen entire /src (require('broccoli-source').WatchedDir)
- listen /tests is listen et
- listen /src/ui/styles
- listen /vendor
- listen /public
- listen index.html, and listen app.import(module) from node_modules
ui/index.html
// ml-button/component  + ml/button/template

- cache ember-inflector, ember-data, ember-load-initializers, ember-resolver

simplistic terms.

// frontend files + templates + fastboot + testing + prepend/append + addon system

All I need:
- Ignore ember-cli-build but yet hack all the needed things (vendor + application.js separation):
 - add ember-cli-*plugins interop
- scss compilation
- figure out a way to run fastboot
- by default memserver environment.
- by default fastboot serve
- transforms and before after injection of a script app.import()
- HEAD injections
- html inline injections
- ENV.APP.API_HOST
- ember-dev-tools
- ENV.APP.rootElement = '#ember-testing', ENV.APP.autoboot
- template lint + eslint
- sass compilation
- investigate how people use engines
- make jquery optional

ENV.locationType = 'none';
// keep test console output quieter
ENV.APP.LOG_ACTIVE_GENERATION = false;
ENV.APP.LOG_VIEW_LOOKUPS = false;

addons to investigate:
- ember-cli-sri,
- ember-cli-csp
- ember-cli-flash
- ember-css-modules?
- ember-i18n
- ember-flash
- investigate new ember test helpers
